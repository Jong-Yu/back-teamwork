generator client {
  provider = "prisma-client-js"
}

generator nestjsDto {
  provider                        = "prisma-generator-nestjs-dto"
  output                          = "../src/generated/nestjs-dto"
  reExport                        = "false"
  fileNamingStyle                 = "camel"
  createDtoPrefix                 = "Create"
  outputToNestJsResourceStructure = "true"
  dtoSuffix                       = "Dto"
  exportRelationModifierClasses   = "true"
  entityPrefix                    = ""
  entitySuffix                    = ""
  updateDtoPrefix                 = "Update"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(0)
  content   String?  @db.Text
  published Boolean  @default(false)
  authorId  Int
  User      User     @relation(fields: [authorId], references: [id], onUpdate: Restrict, map: "post_ibfk_1")

  @@index([authorId], map: "authorId")
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String? @db.Text
  userId Int     @unique(map: "userId")
  User   User    @relation(fields: [userId], references: [id], onUpdate: Restrict, map: "profile_ibfk_1")
}

model User {
  id      Int      @id @default(autoincrement())
  name    String?  @db.VarChar(255)
  email   String   @unique(map: "email") @db.VarChar(255)
  phone   String?
  age     Int
  Post    Post[]
  Profile Profile?
}
